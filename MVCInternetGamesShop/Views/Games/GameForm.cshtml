@model MVCInternetGamesShop.ViewModels.GameFormViewModel

@{
    ViewBag.Title = Model.Title;
}

<h2 id="title">@ViewBag.Title</h2>
<div class="row">
    <div class="col-md-8">


        @using (Html.BeginForm("Save", "Games"))
        {
            @Html.ValidationSummary("", new { @class = "text-danger" })
            <div class="form-group">
                <div class="col-md-10">
                    @Html.LabelFor(m => m.Name)
                    @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Name)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-10">
                    @Html.LabelFor(m => m.Price)
                    @Html.TextBoxFor(m => m.Price, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Price)
                </div>

            </div>

            <div class="form-group">
                <div class="col-md-10">
                    @Html.LabelFor(m => m.ImageName, new { @class = "tooltip-message" })
                    @Html.TextBoxFor(m => m.ImageName, new { @class = "form-control tooltip-message" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-10">
                    @Html.LabelFor(m => m.PlatformId)
                    <label>Aktualnie: @Model.PlatformName</label>
                    @Html.DropDownListFor(m => m.PlatformId, new SelectList(Model.Platforms, "Id", "Name"), "--Wybierz Platformę --", new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.PlatformId)
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-10">
                    @Html.LabelFor(m => m.IsBestseller)
                    @Html.CheckBoxFor(m => m.IsBestseller)
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-10">
                    @Html.LabelFor(m => m.ReleaseDate)
                    <label>Format: dd.mm.yyyy</label>
                    @Html.EditorFor(model => model.ReleaseDate, new { @type = "date", @class = "form-control", text = "Jeśli nie masz obrazka, zostaw to pole puste" })
                    @Html.ValidationMessageFor(m => m.ReleaseDate)
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-10">
                    @Html.LabelFor(m => m.Description)                    
                    @Html.TextAreaFor(m => m.Description, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Description)
                </div>
            </div>
            <br/>


            @Html.HiddenFor(m => m.Id)
            <div class="col-md-10">
                <button type="submit" id="submit-button">Save</button>
            </div>

            if (Model.Id != 0)
            {
                <div class="form-group">
                    <div class="col-md-10">
                        <label for="CurrentCategories">Przypisane Kategorie</label>
                        <select id="test" multiple="multiple" name="SelectedIds">

                            @foreach (var category in Model.Category)
                            {
                                <option id="option-@category.Id" value="@category.Id">@category.Name</option>
                            }
                        </select>
                    </div>
                </div>
            }
            <div class="hidden" id="game-id-for-js" data-id="@Model.Id"></div>
        }
    </div>
</div>

            

            @section scripts {
                @Scripts.Render("~/bundles/EditCategoryScripts")
              


            }




